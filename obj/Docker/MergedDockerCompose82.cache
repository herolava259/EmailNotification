name: dockercompose4627582338515447357
services:
  cart.api:
    build:
      context: C:\Users\Admin\Desktop\EmailNotificationRepo\EmailNotification
      dockerfile: Microservices/Cart/Cart.API/Dockerfile
    container_name: cart.api
    depends_on:
      cartdb:
        condition: service_started
        required: true
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      ConnectionStrings__DatabaseConnectionString: Server=cartdb;Database=CartDb;User Id=sa;Password=1qaz2wsx;TrustServerCertificate=True
      GrpcSettings__ProductUrl: http://product.api
    image: cartapi
    networks:
      default: null
    ports:
      - mode: ingress
        target: 8080
        published: "8008"
        protocol: tcp
  cartdb:
    container_name: cartdb
    environment:
      ACCEPT_EULA: "Y"
      SA_PASSWORD: 1qaz2wsx
    image: mcr.microsoft.com/mssql/server:2017-latest
    networks:
      default: null
    ports:
      - mode: ingress
        target: 1733
        published: "1733"
        protocol: tcp
    restart: always
  pgdbadmin:
    container_name: pgdbadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@eCommerce.net
      PGADMIN_DEFAULT_PASSWORD: admin1234
    image: dpage/pgadmin4
    networks:
      default: null
    ports:
      - mode: ingress
        target: 80
        published: "5051"
        protocol: tcp
    restart: always
    volumes:
      - type: volume
        source: pgadmin_data
        target: /root/.pgadmin
        volume: {}
  product.api:
    build:
      context: C:\Users\Admin\Desktop\EmailNotificationRepo\EmailNotification
      dockerfile: Microservices/Product/Product.API/Dockerfile
    container_name: product.api
    depends_on:
      productdb:
        condition: service_started
        required: true
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      DatabaseSettings__ConnectionString: Server=productdb;Port=5431;Database=ProductDb;User Id=admin;Password=admin1234;
    image: productapi
    networks:
      default: null
    ports:
      - mode: ingress
        target: 8080
        published: "8007"
        protocol: tcp
  productdb:
    container_name: productdb
    environment:
      POSTGRES_DB: ProductDb
      POSTGRES_PASSWORD: admin1234
      POSTGRES_USER: admin
    image: postgres
    networks:
      default: null
    ports:
      - mode: ingress
        target: 5431
        published: "5431"
        protocol: tcp
    restart: always
    volumes:
      - type: volume
        source: postgres_data
        target: /var/lib/postgresql/data
        volume: {}
networks:
  default:
    name: dockercompose4627582338515447357_default
volumes:
  pgadmin_data:
    name: dockercompose4627582338515447357_pgadmin_data
  postgres_data:
    name: dockercompose4627582338515447357_postgres_data